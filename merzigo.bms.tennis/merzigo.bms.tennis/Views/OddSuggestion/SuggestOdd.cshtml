@model merzigo.bms.tennis.Models.OddSuggestionViewModel
@{
    ViewData["Title"] = "Bahis Önerisi";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row mb-3">
        <div class="col-12 d-flex justify-content-between align-items-center">
            <h2 class="mb-0"><i class="fas fa-coins"></i> Bahis Önerisi</h2>
            <a class="btn btn-outline-secondary btn-sm" href="javascript:history.back()">
                <i class="fas fa-arrow-left"></i> Geri
            </a>
        </div>
    </div>

    <!-- Player Stats Panel -->
    <div class="row mb-3">
        <div class="col-lg-6 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-secondary text-white">
                    <strong>@(Model?.Player1Name ?? "Oyuncu 1") - Profil ve İstatistikler</strong>
                </div>
                <div class="card-body">
                    @if (Model?.Player1 != null)
                    {
                        <div class="d-flex align-items-center mb-3">
                            <img src="@Model.Player1.PlayerLogo" alt="logo" class="me-3" style="width:48px;height:48px;object-fit:contain;" onerror="this.style.display='none'" />
                            <div>
                                <div class="fw-semibold">@Model.Player1.PlayerName (@Model.Player1.PlayerCountry)</div>
                                <div class="text-muted small">Doğum: @Model.Player1.PlayerBday</div>
                            </div>
                        </div>
                        @if (Model.Player1.Stats != null && Model.Player1.Stats.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-sm table-striped align-middle mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Sezon</th>
                                            <th>Tür</th>
                                            <th>Sıra</th>
                                            <th>Şamp.</th>
                                            <th>G/M</th>
                                            <th>Hard</th>
                                            <th>Clay</th>
                                            <th>Grass</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var s in Model.Player1.Stats.OrderByDescending(x => x.Season))
                                        {
                                            <tr>
                                                <td><small>@s.Season</small></td>
                                                <td><small>@s.Type</small></td>
                                                <td><small>@s.Rank</small></td>
                                                <td><small>@s.Titles</small></td>
                                                <td><small>@s.MatchesWon / @s.MatchesLost</small></td>
                                                <td><small>@s.HardWon / @s.HardLost</small></td>
                                                <td><small>@s.ClayWon / @s.ClayLost</small></td>
                                                <td><small>@s.GrassWon / @s.GrassLost</small></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-muted">İstatistik bulunamadı.</div>
                        }
                    }
                    else
                    {
                        <div class="text-muted">Oyuncu verisi bulunamadı.</div>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-6 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-secondary text-white">
                    <strong>@(Model?.Player2Name ?? "Oyuncu 2") - Profil ve İstatistikler</strong>
                </div>
                <div class="card-body">
                    @if (Model?.Player2 != null)
                    {
                        <div class="d-flex align-items-center mb-3">
                            <img src="@Model.Player2.PlayerLogo" alt="logo" class="me-3" style="width:48px;height:48px;object-fit:contain;" onerror="this.style.display='none'" />
                            <div>
                                <div class="fw-semibold">@Model.Player2.PlayerName (@Model.Player2.PlayerCountry)</div>
                                <div class="text-muted small">Doğum: @Model.Player2.PlayerBday</div>
                            </div>
                        </div>
                        @if (Model.Player2.Stats != null && Model.Player2.Stats.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-sm table-striped align-middle mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Sezon</th>
                                            <th>Tür</th>
                                            <th>Sıra</th>
                                            <th>Şamp.</th>
                                            <th>G/M</th>
                                            <th>Hard</th>
                                            <th>Clay</th>
                                            <th>Grass</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var s in Model.Player2.Stats.OrderByDescending(x => x.Season))
                                        {
                                            <tr>
                                                <td><small>@s.Season</small></td>
                                                <td><small>@s.Type</small></td>
                                                <td><small>@s.Rank</small></td>
                                                <td><small>@s.Titles</small></td>
                                                <td><small>@s.MatchesWon / @s.MatchesLost</small></td>
                                                <td><small>@s.HardWon / @s.HardLost</small></td>
                                                <td><small>@s.ClayWon / @s.ClayLost</small></td>
                                                <td><small>@s.GrassWon / @s.GrassLost</small></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-muted">İstatistik bulunamadı.</div>
                        }
                    }
                    else
                    {
                        <div class="text-muted">Oyuncu verisi bulunamadı.</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Standings Panel -->
    <div class="row mb-3">
        <div class="col-lg-6 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-info text-white">
                    <strong>@(Model?.Player1Name ?? "Oyuncu 1") - Sıralama</strong>
                </div>
                <div class="card-body">
                    @if (Model?.Player1Standing != null)
                    {
                        <div class="row g-2 small">
                            <div class="col-6">
                                <div class="text-muted">Tur</div>
                                <div class="fw-semibold">@Model.Player1Standing.league</div>
                            </div>
                            <div class="col-6">
                                <div class="text-muted">Sıra</div>
                                <div class="fw-semibold">@Model.Player1Standing.place</div>
                            </div>
                            <div class="col-6">
                                <div class="text-muted">Puan</div>
                                <div class="fw-semibold">@Model.Player1Standing.points</div>
                            </div>
                            <div class="col-6">
                                <div class="text-muted">Ülke</div>
                                <div class="fw-semibold">@Model.Player1Standing.country</div>
                            </div>
                            <div class="col-12">
                                <div class="text-muted">Hareket</div>
                                <div class="fw-semibold">@Model.Player1Standing.movement</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">Sıralama bulunamadı.</div>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-6 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-info text-white">
                    <strong>@(Model?.Player2Name ?? "Oyuncu 2") - Sıralama</strong>
                </div>
                <div class="card-body">
                    @if (Model?.Player2Standing != null)
                    {
                        <div class="row g-2 small">
                            <div class="col-6">
                                <div class="text-muted">Tur</div>
                                <div class="fw-semibold">@Model.Player2Standing.league</div>
                            </div>
                            <div class="col-6">
                                <div class="text-muted">Sıra</div>
                                <div class="fw-semibold">@Model.Player2Standing.place</div>
                            </div>
                            <div class="col-6">
                                <div class="text-muted">Puan</div>
                                <div class="fw-semibold">@Model.Player2Standing.points</div>
                            </div>
                            <div class="col-6">
                                <div class="text-muted">Ülke</div>
                                <div class="fw-semibold">@Model.Player2Standing.country</div>
                            </div>
                            <div class="col-12">
                                <div class="text-muted">Hareket</div>
                                <div class="fw-semibold">@Model.Player2Standing.movement</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">Sıralama bulunamadı.</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <strong>@(Model?.Player1Name ?? "Oyuncu 1") - Son Karşılaşmalar</strong>
                    <span class="badge bg-light text-dark">@((Model?.FixturesPlayer1?.Count ?? 0))</span>
                </div>
                <div class="card-body p-0">
                    @if (Model?.FixturesPlayer1 != null && Model.FixturesPlayer1.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm table-hover align-middle mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Tarih</th>
                                        <th>Turnuva</th>
                                        <th>Rakip</th>
                                        <th>Skor</th>
                                        <th>Durum</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var f in Model.FixturesPlayer1.OrderByDescending(x => x.EventDate).ThenByDescending(x => x.EventTime))
                                    {
                                        var opponentName = f.FirstPlayerKey == Model.Player1Id ? f.EventSecondPlayer : f.EventFirstPlayer;
                                        <tr>
                                            <td>
                                                <small>@f.EventDate @f.EventTime</small>
                                            </td>
                                            <td>
                                                <small>@f.TournamentName</small>
                                            </td>
                                            <td>
                                                <small>@opponentName</small>
                                            </td>
                                            <td>
                                                <small>@(string.IsNullOrWhiteSpace(f.EventFinalResult) ? f.EventGameResult : f.EventFinalResult)</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-@GetStatusColor(f.EventStatus)">@f.EventStatus</span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="p-4 text-center text-muted">Kayıt bulunamadı.</div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-6 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                    <strong>@(Model?.Player2Name ?? "Oyuncu 2") - Son Karşılaşmalar</strong>
                    <span class="badge bg-light text-dark">@((Model?.FixturesPlayer2?.Count ?? 0))</span>
                </div>
                <div class="card-body p-0">
                    @if (Model?.FixturesPlayer2 != null && Model.FixturesPlayer2.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm table-hover align-middle mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Tarih</th>
                                        <th>Turnuva</th>
                                        <th>Rakip</th>
                                        <th>Skor</th>
                                        <th>Durum</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var f in Model.FixturesPlayer2.OrderByDescending(x => x.EventDate).ThenByDescending(x => x.EventTime))
                                    {
                                        var opponentName = f.FirstPlayerKey == Model.Player2Id ? f.EventSecondPlayer : f.EventFirstPlayer;
                                        <tr>
                                            <td>
                                                <small>@f.EventDate @f.EventTime</small>
                                            </td>
                                            <td>
                                                <small>@f.TournamentName</small>
                                            </td>
                                            <td>
                                                <small>@opponentName</small>
                                            </td>
                                            <td>
                                                <small>@(string.IsNullOrWhiteSpace(f.EventFinalResult) ? f.EventGameResult : f.EventFinalResult)</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-@GetStatusColor(f.EventStatus)">@f.EventStatus</span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="p-4 text-center text-muted">Kayıt bulunamadı.</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- H2H Section -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-dark text-white">
                    <strong>Head-to-Head (H2H)</strong>
                </div>
                <div class="card-body">
                    @if (Model?.H2H != null)
                    {
                        <div class="row">
                            <div class="col-lg-4 mb-3">
                                <h6 class="text-muted">Birbirlerine Karşı</h6>
                                @if (Model.H2H.H2H != null && Model.H2H.H2H.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-sm table-striped align-middle mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Tarih</th>
                                                    <th>Oyuncu 1</th>
                                                    <th>Oyuncu 2</th>
                                                    <th>Skor</th>
                                                    <th>Kazanan</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var m in Model.H2H.H2H.OrderByDescending(x => x.EventDate).ThenByDescending(x => x.EventTime))
                                                {
                                                    var winnerText = (m.EventWinner ?? string.Empty).ToLowerInvariant();
                                                    var winnerName = winnerText.Contains("first") ? m.EventFirstPlayer : winnerText.Contains("second") ? m.EventSecondPlayer : "-";
                                                    <tr>
                                                        <td><small>@m.EventDate @m.EventTime</small></td>
                                                        <td><small>@m.EventFirstPlayer</small></td>
                                                        <td><small>@m.EventSecondPlayer</small></td>
                                                        <td><small>@(string.IsNullOrWhiteSpace(m.EventFinalResult) ? m.EventGameResult : m.EventFinalResult)</small></td>
                                                        <td><small>@winnerName</small></td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-muted">Kayıt bulunamadı.</div>
                                }
                            </div>
                            <div class="col-lg-4 mb-3">
                                <h6 class="text-muted">@(Model?.Player1Name ?? "Oyuncu 1") Sonuçları</h6>
                                @if (Model.H2H.FirstPlayerResults != null && Model.H2H.FirstPlayerResults.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-sm table-striped align-middle mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Tarih</th>
                                                    <th>Oyuncu 1</th>
                                                    <th>Oyuncu 2</th>
                                                    <th>Skor</th>
                                                    <th>Kazanan</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var m in Model.H2H.FirstPlayerResults
                                                    .Where(x => x.FirstPlayerKey == Model.Player1Id
                                                        || x.SecondPlayerKey == Model.Player1Id
                                                        || string.Equals(x.EventFirstPlayer, Model.Player1Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase)
                                                        || string.Equals(x.EventSecondPlayer, Model.Player1Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase))
                                                    .OrderByDescending(x => x.EventDate)
                                                    .ThenByDescending(x => x.EventTime))
                                                {
                                                    var winnerText = (m.EventWinner ?? string.Empty).ToLowerInvariant();
                                                    var winnerName = winnerText.Contains("first") ? m.EventFirstPlayer : winnerText.Contains("second") ? m.EventSecondPlayer : "-";
                                                    var playerId = Model.Player1Id;
                                                    var playerName = Model.Player1Name ?? string.Empty;
                                                    var playerIsFirst = m.FirstPlayerKey == playerId || string.Equals(m.EventFirstPlayer, playerName, System.StringComparison.OrdinalIgnoreCase);
                                                    var didWin = (winnerText.Contains("first") && playerIsFirst) || (winnerText.Contains("second") && !playerIsFirst);
                                                    var rowClass = didWin ? "table-success" : "table-danger";
                                                    <tr class="@rowClass">
                                                        <td><small>@m.EventDate @m.EventTime</small></td>
                                                        <td><small>@m.EventFirstPlayer</small></td>
                                                        <td><small>@m.EventSecondPlayer</small></td>
                                                        <td><small>@(string.IsNullOrWhiteSpace(m.EventFinalResult) ? m.EventGameResult : m.EventFinalResult)</small></td>
                                                        <td><small>@winnerName</small></td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-muted">Kayıt bulunamadı.</div>
                                }
                            </div>
                            <div class="col-lg-4 mb-3">
                                <h6 class="text-muted">@(Model?.Player2Name ?? "Oyuncu 2") Sonuçları</h6>
                                @if (Model.H2H.SecondPlayerResults != null && Model.H2H.SecondPlayerResults.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-sm table-striped align-middle mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Tarih</th>
                                                    <th>Oyuncu 1</th>
                                                    <th>Oyuncu 2</th>
                                                    <th>Skor</th>
                                                    <th>Kazanan</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var m in Model.H2H.SecondPlayerResults
                                                    .Where(x => x.FirstPlayerKey == Model.Player2Id
                                                        || x.SecondPlayerKey == Model.Player2Id
                                                        || string.Equals(x.EventFirstPlayer, Model.Player2Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase)
                                                        || string.Equals(x.EventSecondPlayer, Model.Player2Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase))
                                                    .OrderByDescending(x => x.EventDate)
                                                    .ThenByDescending(x => x.EventTime))
                                                {
                                                    var winnerText = (m.EventWinner ?? string.Empty).ToLowerInvariant();
                                                    var winnerName = winnerText.Contains("first") ? m.EventFirstPlayer : winnerText.Contains("second") ? m.EventSecondPlayer : "-";
                                                    var playerId = Model.Player2Id;
                                                    var playerName = Model.Player2Name ?? string.Empty;
                                                    var playerIsFirst = m.FirstPlayerKey == playerId || string.Equals(m.EventFirstPlayer, playerName, System.StringComparison.OrdinalIgnoreCase);
                                                    var didWin = (winnerText.Contains("first") && playerIsFirst) || (winnerText.Contains("second") && !playerIsFirst);
                                                    var rowClass = didWin ? "table-success" : "table-danger";
                                                    <tr class="@rowClass">
                                                        <td><small>@m.EventDate @m.EventTime</small></td>
                                                        <td><small>@m.EventFirstPlayer</small></td>
                                                        <td><small>@m.EventSecondPlayer</small></td>
                                                        <td><small>@(string.IsNullOrWhiteSpace(m.EventFinalResult) ? m.EventGameResult : m.EventFinalResult)</small></td>
                                                        <td><small>@winnerName</small></td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-muted">Kayıt bulunamadı.</div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">H2H verisi bulunamadı.</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Odds Panel -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-warning">
                    <strong>Maç Oranları</strong>
                </div>
                <div class="card-body">
                    @if (Model?.Odds != null && Model.Odds.Result != null && Model.Odds.Result.Any())
                    {
                        var firstBook = Model.Odds.Result.First();
                        var matchOdds = firstBook.Value;
                        <div class="row g-3">
                            <div class="col-lg-6">
                                <h6>Maç Kazananı (Home/Away)</h6>
                                @if (matchOdds.HomeAway != null)
                                {
                                    <div class="table-responsive">
                                        <table class="table table-sm table-striped align-middle mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Bahis</th>
                                                    <th>Oran</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (System.Collections.Generic.KeyValuePair<string, string> kv in matchOdds.HomeAway.Home)
                                                {
                                                    <tr>
                                                        <td><small>Home - @kv.Key</small></td>
                                                        <td><small>@kv.Value</small></td>
                                                    </tr>
                                                }
                                                @foreach (System.Collections.Generic.KeyValuePair<string, string> kv in matchOdds.HomeAway.Away)
                                                {
                                                    <tr>
                                                        <td><small>Away - @kv.Key</small></td>
                                                        <td><small>@kv.Value</small></td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-muted">Home/Away oranı bulunamadı.</div>
                                }
                            </div>
                            <div class="col-lg-6">
                                <h6>İlk Set Kazananı (Home/Away)</h6>
                                @if (matchOdds.HomeAwayFirstSet != null)
                                {
                                    <div class="table-responsive">
                                        <table class="table table-sm table-striped align-middle mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Bahis</th>
                                                    <th>Oran</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (System.Collections.Generic.KeyValuePair<string, string> kv in matchOdds.HomeAwayFirstSet.Home)
                                                {
                                                    <tr>
                                                        <td><small>Home - @kv.Key</small></td>
                                                        <td><small>@kv.Value</small></td>
                                                    </tr>
                                                }
                                                @foreach (System.Collections.Generic.KeyValuePair<string, string> kv in matchOdds.HomeAwayFirstSet.Away)
                                                {
                                                    <tr>
                                                        <td><small>Away - @kv.Key</small></td>
                                                        <td><small>@kv.Value</small></td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-muted">İlk set oranı bulunamadı.</div>
                                }
                            </div>
                        </div>

                        <div class="row g-3 mt-2">
                            <div class="col-12">
                                <h6>Set Bahisleri</h6>
                                @if (matchOdds.SetBetting != null && matchOdds.SetBetting.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-sm table-striped align-middle mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Pazar</th>
                                                    <th>Seçenek</th>
                                                    <th>Oran</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.Dictionary<string, string>> market in matchOdds.SetBetting)
                                                {
                                                    foreach (System.Collections.Generic.KeyValuePair<string, string> option in market.Value)
                                                    {
                                                        <tr>
                                                            <td><small>@market.Key</small></td>
                                                            <td><small>@option.Key</small></td>
                                                            <td><small>@option.Value</small></td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-muted">Set bahis oranı bulunamadı.</div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">Maç oranı verisi bulunamadı.</div>
                    }

                    <hr />

                    <h6>Canlı Oranlar</h6>
                    @if (Model?.LiveOdds != null && Model.LiveOdds.Result != null && Model.LiveOdds.Result.Any())
                    {
                        var firstLive = Model.LiveOdds.Result.First();
                        var liveDetail = firstLive.Value;
                        @* Render available live odds list *@
                        @if (liveDetail.LiveOdds != null && liveDetail.LiveOdds.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-sm table-striped align-middle mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Bahis</th>
                                            <th>Tür</th>
                                            <th>Değer</th>
                                            <th>Handicap</th>
                                            <th>Durum</th>
                                            <th>Güncelleme</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var lo in liveDetail.LiveOdds)
                                        {
                                            <tr>
                                                <td><small>@lo.OddName</small></td>
                                                <td><small>@lo.Type</small></td>
                                                <td><small>@lo.Value</small></td>
                                                <td><small>@lo.Handicap</small></td>
                                                <td><small>@lo.Suspended</small></td>
                                                <td><small>@lo.Updated</small></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-muted">Canlı oran bulunamadı.</div>
                        }
                    }
                    else
                    {
                        <div class="text-muted">Canlı oran verisi bulunamadı.</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12 text-end">
            @{ 
                var matchIdQuery = Context.Request.Query["matchId"]; 
                double s1 = 0.0; 
                double s2 = 0.0; 
                if (int.TryParse(Model?.Player1Standing?.place, out var rank1) && rank1 > 0) { s1 = 1.0 / rank1; }
                if (int.TryParse(Model?.Player2Standing?.place, out var rank2) && rank2 > 0) { s2 = 1.0 / rank2; }
                // Winrate calculations from H2H lists
                double p1Wins = 0, p1Total = 0, p2Wins = 0, p2Total = 0;
                if (Model?.H2H?.FirstPlayerResults != null)
                {
                    foreach (var m in Model.H2H.FirstPlayerResults)
                    {
                        bool participated = (m.FirstPlayerKey == Model.Player1Id) || (m.SecondPlayerKey == Model.Player1Id)
                            || string.Equals(m.EventFirstPlayer, Model.Player1Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase)
                            || string.Equals(m.EventSecondPlayer, Model.Player1Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase);
                        if (!participated) continue;
                        p1Total++;
                        var winner = (m.EventWinner ?? string.Empty).ToLowerInvariant();
                        bool playerIsFirst = (m.FirstPlayerKey == Model.Player1Id) || string.Equals(m.EventFirstPlayer, Model.Player1Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase);
                        bool didWin = (winner.Contains("first") && playerIsFirst) || (winner.Contains("second") && !playerIsFirst);
                        if (didWin) p1Wins++;
                    }
                }
                if (Model?.H2H?.SecondPlayerResults != null)
                {
                    foreach (var m in Model.H2H.SecondPlayerResults)
                    {
                        bool participated = (m.FirstPlayerKey == Model.Player2Id) || (m.SecondPlayerKey == Model.Player2Id)
                            || string.Equals(m.EventFirstPlayer, Model.Player2Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase)
                            || string.Equals(m.EventSecondPlayer, Model.Player2Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase);
                        if (!participated) continue;
                        p2Total++;
                        var winner = (m.EventWinner ?? string.Empty).ToLowerInvariant();
                        bool playerIsFirst = (m.FirstPlayerKey == Model.Player2Id) || string.Equals(m.EventFirstPlayer, Model.Player2Name ?? string.Empty, System.StringComparison.OrdinalIgnoreCase);
                        bool didWin = (winner.Contains("first") && playerIsFirst) || (winner.Contains("second") && !playerIsFirst);
                        if (didWin) p2Wins++;
                    }
                }
                double player1_winrate = (p1Total > 0) ? (p1Wins / p1Total) : 0.0;
                double player2_winrate = (p2Total > 0) ? (p2Wins / p2Total) : 0.0;
                // H2H mutual winner
                long? h2h_winner = null;
                if (Model?.H2H?.H2H != null && Model.H2H.H2H.Any())
                {
                    int firstWins = 0, secondWins = 0;
                    foreach (var m in Model.H2H.H2H)
                    {
                        var winner = (m.EventWinner ?? string.Empty).ToLowerInvariant();
                        if (winner.Contains("first")) firstWins++;
                        else if (winner.Contains("second")) secondWins++;
                    }
                    if (firstWins > secondWins) h2h_winner = Model.Player1Id;
                    else if (secondWins > firstWins) h2h_winner = Model.Player2Id;
                }
            }
            <a class="btn btn-primary"
               href="@Url.Action("CalculateOdds", "OddSuggestion", new { matchId = matchIdQuery.ToString(), player1 = Model?.Player1Name, player2 = Model?.Player2Name, player1Id = Model?.Player1Id, player2Id = Model?.Player2Id, s_player1 = s1, s_player2 = s2, player1_winrate = player1_winrate, player2_winrate = player2_winrate, h2h_winner = h2h_winner })">
                <i class="fas fa-calculator"></i> Calculate Odds
            </a>
        </div>
    </div>

</div>

@functions {
    private string GetStatusColor(string status)
    {
        var s = status?.ToLowerInvariant() ?? string.Empty;
        if (s.Contains("live")) return "danger";
        if (s.Contains("finished") || s.Contains("ended") || s.Contains("completed")) return "success";
        if (s.Contains("upcoming") || s.Contains("scheduled") || s.Contains("not started")) return "warning text-dark";
        return "secondary";
    }
}
